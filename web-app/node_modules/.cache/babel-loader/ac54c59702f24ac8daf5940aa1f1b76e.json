{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@DELETED_BASE64_STRING\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@DELETED_BASE64_STRING\";\nimport _getPrototypeOf from \"@DELETED_BASE64_STRING\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/colin/Desktop/insemble/web-app/src/components/tenant-deep-dive/SiteComparison.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, CardHeader, CardBody, CardFooter, Row, Col, FormSelect, Container } from \"shards-react\";\nimport colors from \"../../utils/colors\";\nimport Chart from \"../../utils/chart\";\n\nvar SiteComparison =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SiteComparison, _React$Component);\n\n  function SiteComparison(props) {\n    var _this;\n\n    _classCallCheck(this, SiteComparison);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SiteComparison).call(this, props));\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(SiteComparison, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var chartConfig = {\n        type: \"doughnut\",\n        options: _objectSpread({}, {\n          legend: false,\n          cutoutPercentage: 80,\n          tooltips: {\n            enabled: false,\n            mode: \"index\",\n            position: \"nearest\"\n          }\n        }, this.props.chartOptions),\n        data: this.props.chartData\n      };\n      new Chart(this.canvasRef.current, chartConfig);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var title = this.props.title;\n      var labels = this.getParsedLabels();\n      return React.createElement(Card, {\n        small: true,\n        className: \"ubd-stats h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, title), React.createElement(\"div\", {\n        className: \"block-handle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        className: \"d-flex flex-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Demographics\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        width: \"100\",\n        ref: this.canvasRef,\n        className: \"analytics-users-by-device mt-3 mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"ubd-stats__legend w-75 m-auto pb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, labels.map(function (label, idx) {\n        return React.createElement(\"div\", {\n          key: idx,\n          className: \"ubd-stats__item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, label.icon && React.createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: label.icon\n          },\n          style: {\n            color: label.iconColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"ubd-stats__category\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, label.title), React.createElement(\"span\", {\n          className: \"ubd-stats__value\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, label.value, \"%\"));\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Income\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"$125,230 per year\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Street Traffic\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"68,879 as of 11/6\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Ecosystem\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"68,879 as of 11/6\")))), React.createElement(CardFooter, {\n        className: \"border-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(FormSelect, {\n        size: \"sm\",\n        value: \"half-mile\",\n        style: {\n          maxWidth: \"130px\"\n        },\n        onChange: function onChange() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"half-mile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"0.5 Mile\"), React.createElement(\"option\", {\n        value: \"2-miles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"2 Miles\"), React.createElement(\"option\", {\n        value: \"5-miles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"5 Miles\"), React.createElement(\"option\", {\n        value: \"10-miles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"10 Miles\"), React.createElement(\"option\", {\n        value: \"25-miles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"25 Miles\"))), React.createElement(Col, {\n        className: \"text-right view-report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"View full report \\u2192\")))));\n    }\n  }, {\n    key: \"getParsedLabels\",\n    value: function getParsedLabels() {\n      var chartData = this.props.chartData;\n\n      if (!chartData || typeof chartData.labels === \"undefined\") {\n        return [];\n      }\n\n      return chartData.labels.map(function (label, idx) {\n        var dataset = chartData.datasets[0];\n        return {\n          title: label,\n          value: dataset.data[idx]\n        };\n      });\n    }\n  }]);\n\n  return SiteComparison;\n}(React.Component);\n\nSiteComparison.propTypes = {\n  /**\n   * The card's title.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object,\n\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.object,\n\n  /**\n   * The Chart.js config.\n   */\n  chartConfig: PropTypes.object\n};\nSiteComparison.defaultProps = {\n  title: \"Site Comparison\",\n  chartConfig: Object.create(null),\n  chartOptions: Object.create(null),\n  chartData: {\n    labels: [\"Asian\", \"Black\", \"Hispanic\", \"Indian\", \"Multi\", \"White\"],\n    datasets: [{\n      hoverBorderColor: colors.white.toRGBA(1),\n      data: [3, 6, 15, 5, 14, 57],\n      backgroundColor: [colors.primary.toRGBA(1), colors.primary.toRGBA(0.8), colors.primary.toRGBA(0.6), colors.primary.toRGBA(0.4), colors.primary.toRGBA(0.2), colors.primary.toRGBA(0.1)]\n    }]\n  }\n};\nexport default SiteComparison;","map":{"version":3,"sources":["/Users/colin/Desktop/insemble/web-app/src/components/tenant-deep-dive/SiteComparison.js"],"names":["React","PropTypes","Card","CardHeader","CardBody","CardFooter","Row","Col","FormSelect","Container","colors","Chart","SiteComparison","props","canvasRef","createRef","chartConfig","type","options","legend","cutoutPercentage","tooltips","enabled","mode","position","chartOptions","data","chartData","current","title","labels","getParsedLabels","map","label","idx","icon","__html","color","iconColor","value","maxWidth","dataset","datasets","Component","propTypes","string","object","defaultProps","Object","create","hoverBorderColor","white","toRGBA","backgroundColor","primary"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,UAJF,EAKEC,GALF,EAMEC,GANF,EAOEC,UAPF,EAQEC,SARF,QASO,cATP;AAWA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;IAEMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;AAEA,UAAKC,SAAL,GAAiBd,KAAK,CAACe,SAAN,EAAjB;AAHiB;AAIlB;;;;wCAEmB;AAClB,UAAMC,WAAW,GAAG;AAClBC,QAAAA,IAAI,EAAE,UADY;AAElBC,QAAAA,OAAO,oBACF;AACDC,UAAAA,MAAM,EAAE,KADP;AAEDC,UAAAA,gBAAgB,EAAE,EAFjB;AAGDC,UAAAA,QAAQ,EAAE;AACRC,YAAAA,OAAO,EAAE,KADD;AAERC,YAAAA,IAAI,EAAE,OAFE;AAGRC,YAAAA,QAAQ,EAAE;AAHF;AAHT,SADE,EAUF,KAAKX,KAAL,CAAWY,YAVT,CAFW;AAclBC,QAAAA,IAAI,EAAE,KAAKb,KAAL,CAAWc;AAdC,OAApB;AAiBA,UAAIhB,KAAJ,CAAU,KAAKG,SAAL,CAAec,OAAzB,EAAkCZ,WAAlC;AACD;;;6BAEQ;AAAA,UACCa,KADD,GACW,KAAKhB,KADhB,CACCgB,KADD;AAEP,UAAMC,MAAM,GAAG,KAAKC,eAAL,EAAf;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,MAAX;AAAY,QAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBF,KAArB,CADF,EAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAME,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAGE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,GAAG,EAAE,KAAKf,SAFZ;AAGE,QAAA,SAAS,EAAC,qCAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EASA;AAAK,QAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGgB,MAAM,CAACE,GAAP,CAAW,UAACC,KAAD,EAAQC,GAAR;AAAA,eACV;AAAK,UAAA,GAAG,EAAEA,GAAV;AAAe,UAAA,SAAS,EAAC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,KAAK,CAACE,IAAN,IACC;AACE,UAAA,uBAAuB,EAAE;AAAEC,YAAAA,MAAM,EAAEH,KAAK,CAACE;AAAhB,WAD3B;AAEE,UAAA,KAAK,EAAE;AAAEE,YAAAA,KAAK,EAAEJ,KAAK,CAACK;AAAf,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAOE;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuCL,KAAK,CAACJ,KAA7C,CAPF,EAQE;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoCI,KAAK,CAACM,KAA1C,MARF,CADU;AAAA,OAAX,CADH,CATA,CAHF,CADF,EA6BE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,CA7BF,EAmCE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAGE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,CAnCF,EAyCE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAGE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,CAzCF,CADF,CANF,EA2DE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,IADP;AAEE,QAAA,KAAK,EAAC,WAFR;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAHT;AAIE,QAAA,QAAQ,EAAE,oBAAM,CAAE,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME;AAAQ,QAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,EAOE;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,EAQE;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,EASE;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,EAUE;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,CADF,CAFF,EAkBE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFF,CAlBF,CADF,CA3DF,CADF;AAuFD;;;sCAEiB;AAAA,UACRb,SADQ,GACM,KAAKd,KADX,CACRc,SADQ;;AAGhB,UAAI,CAACA,SAAD,IAAc,OAAOA,SAAS,CAACG,MAAjB,KAA4B,WAA9C,EAA2D;AACzD,eAAO,EAAP;AACD;;AAED,aAAOH,SAAS,CAACG,MAAV,CAAiBE,GAAjB,CAAqB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC1C,YAAMO,OAAO,GAAGd,SAAS,CAACe,QAAV,CAAmB,CAAnB,CAAhB;AAEA,eAAO;AACLb,UAAAA,KAAK,EAAEI,KADF;AAELM,UAAAA,KAAK,EAAEE,OAAO,CAACf,IAAR,CAAaQ,GAAb;AAFF,SAAP;AAID,OAPM,CAAP;AAQD;;;;EAxI0BlC,KAAK,CAAC2C,S;;AA2InC/B,cAAc,CAACgC,SAAf,GAA2B;AACzB;;;AAGAf,EAAAA,KAAK,EAAE5B,SAAS,CAAC4C,MAJQ;;AAKzB;;;AAGApB,EAAAA,YAAY,EAAExB,SAAS,CAAC6C,MARC;;AASzB;;;AAGAnB,EAAAA,SAAS,EAAE1B,SAAS,CAAC6C,MAZI;;AAazB;;;AAGA9B,EAAAA,WAAW,EAAEf,SAAS,CAAC6C;AAhBE,CAA3B;AAmBAlC,cAAc,CAACmC,YAAf,GAA8B;AAC5BlB,EAAAA,KAAK,EAAE,iBADqB;AAE5Bb,EAAAA,WAAW,EAAEgC,MAAM,CAACC,MAAP,CAAc,IAAd,CAFe;AAG5BxB,EAAAA,YAAY,EAAEuB,MAAM,CAACC,MAAP,CAAc,IAAd,CAHc;AAI5BtB,EAAAA,SAAS,EAAE;AACTG,IAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,UAAnB,EAA+B,QAA/B,EAAyC,OAAzC,EAAkD,OAAlD,CADC;AAETY,IAAAA,QAAQ,EAAE,CACR;AACEQ,MAAAA,gBAAgB,EAAExC,MAAM,CAACyC,KAAP,CAAaC,MAAb,CAAoB,CAApB,CADpB;AAEE1B,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,CAAX,EAAc,EAAd,EAAkB,EAAlB,CAFR;AAGE2B,MAAAA,eAAe,EAAE,CACf3C,MAAM,CAAC4C,OAAP,CAAeF,MAAf,CAAsB,CAAtB,CADe,EAEf1C,MAAM,CAAC4C,OAAP,CAAeF,MAAf,CAAsB,GAAtB,CAFe,EAGf1C,MAAM,CAAC4C,OAAP,CAAeF,MAAf,CAAsB,GAAtB,CAHe,EAIf1C,MAAM,CAAC4C,OAAP,CAAeF,MAAf,CAAsB,GAAtB,CAJe,EAKf1C,MAAM,CAAC4C,OAAP,CAAeF,MAAf,CAAsB,GAAtB,CALe,EAMf1C,MAAM,CAAC4C,OAAP,CAAeF,MAAf,CAAsB,GAAtB,CANe;AAHnB,KADQ;AAFD;AAJiB,CAA9B;AAuBA,eAAexC,cAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Row,\n  Col,\n  FormSelect, \n  Container\n} from \"shards-react\";\n\nimport colors from \"../../utils/colors\";\nimport Chart from \"../../utils/chart\";\n\nclass SiteComparison extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartConfig = {\n      type: \"doughnut\",\n      options: {\n        ...{\n          legend: false,\n          cutoutPercentage: 80,\n          tooltips: {\n            enabled: false,\n            mode: \"index\",\n            position: \"nearest\"\n          }\n        },\n        ...this.props.chartOptions\n      },\n      data: this.props.chartData\n    };\n\n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const { title } = this.props;\n    const labels = this.getParsedLabels();\n\n    return (\n      <Card small className=\"ubd-stats h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n          <div className=\"block-handle\" />\n        </CardHeader>\n\n        <CardBody className=\"d-flex flex-column\">\n          <Container>\n            <Row>\n              <Col>Demographics\n              </Col>\n              <Col>\n                {/* Chart */}\n              <canvas\n                width=\"100\"\n                ref={this.canvasRef}\n                className=\"analytics-users-by-device mt-3 mb-4\"\n              />\n\n              {/* Legend */}\n              <div className=\"ubd-stats__legend w-75 m-auto pb-4\">\n                {labels.map((label, idx) => (\n                  <div key={idx} className=\"ubd-stats__item\">\n                    {label.icon && (\n                      <div\n                        dangerouslySetInnerHTML={{ __html: label.icon }}\n                        style={{ color: label.iconColor }}\n                      />\n                    )}\n                    <span className=\"ubd-stats__category\">{label.title}</span>\n                    <span className=\"ubd-stats__value\">{label.value}%</span>\n                  </div>\n                ))}\n              </div>\n              </Col>\n            </Row>\n            <Row >\n              <Col>Income\n              </Col>\n              <Col>$125,230 per year\n              </Col>\n            </Row>\n            <Row>\n              <Col>Street Traffic\n              </Col>\n              <Col>68,879 as of 11/6\n              </Col>\n            </Row>\n            <Row>\n              <Col>Ecosystem\n              </Col>\n              <Col>68,879 as of 11/6\n              </Col>\n            </Row>\n\n\n          </Container>\n        </CardBody>\n\n        <CardFooter className=\"border-top\">\n          <Row>\n            {/* Time Span */}\n            <Col>\n              <FormSelect\n                size=\"sm\"\n                value=\"half-mile\"\n                style={{ maxWidth: \"130px\" }}\n                onChange={() => {}}\n              >\n                <option value=\"half-mile\">0.5 Mile</option>\n                <option value=\"2-miles\">2 Miles</option>\n                <option value=\"5-miles\">5 Miles</option>\n                <option value=\"10-miles\">10 Miles</option>\n                <option value=\"25-miles\">25 Miles</option>\n              </FormSelect>\n            </Col>\n\n            {/* View Full Report */}\n            <Col className=\"text-right view-report\">\n              {/* eslint-disable-next-line */}\n              <a href=\"#\">View full report &rarr;</a>\n            </Col>\n          </Row>\n        </CardFooter>\n      </Card>\n    );\n  }\n\n  getParsedLabels() {\n    const { chartData } = this.props;\n\n    if (!chartData || typeof chartData.labels === \"undefined\") {\n      return [];\n    }\n\n    return chartData.labels.map((label, idx) => {\n      const dataset = chartData.datasets[0];\n\n      return {\n        title: label,\n        value: dataset.data[idx]\n      };\n    });\n  }\n}\n\nSiteComparison.propTypes = {\n  /**\n   * The card's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.object,\n  /**\n   * The Chart.js config.\n   */\n  chartConfig: PropTypes.object\n};\n\nSiteComparison.defaultProps = {\n  title: \"Site Comparison\",\n  chartConfig: Object.create(null),\n  chartOptions: Object.create(null),\n  chartData: {\n    labels: [\"Asian\", \"Black\", \"Hispanic\", \"Indian\", \"Multi\", \"White\"],\n    datasets: [\n      {\n        hoverBorderColor: colors.white.toRGBA(1),\n        data: [3, 6, 15, 5, 14, 57],\n        backgroundColor: [\n          colors.primary.toRGBA(1),\n          colors.primary.toRGBA(0.8),\n          colors.primary.toRGBA(0.6),\n          colors.primary.toRGBA(0.4),\n          colors.primary.toRGBA(0.2),\n          colors.primary.toRGBA(0.1)\n        ]\n      }\n    ]\n  }\n};\n\nexport default SiteComparison;\n"]},"metadata":{},"sourceType":"module"}