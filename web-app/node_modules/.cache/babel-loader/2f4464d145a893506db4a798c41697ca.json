{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@DELETED_BASE64_STRING\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@DELETED_BASE64_STRING\";\nimport _getPrototypeOf from \"@DELETED_BASE64_STRING\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/colin/Desktop/insemble/web-app/src/components/explore/Sessions.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, CardHeader, CardBody, Row, Col, ButtonGroup, Button } from \"shards-react\";\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport colors from \"../../utils/colors\";\nimport Chart from \"../../utils/chart\";\n\nvar Sessions =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Sessions, _React$Component);\n\n  function Sessions(props) {\n    var _this;\n\n    _classCallCheck(this, Sessions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sessions).call(this, props));\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Sessions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var chartOptions = _objectSpread({}, {\n        responsive: true,\n        legend: false,\n        elements: {\n          line: {\n            // A higher value makes the line look skewed at this ratio.\n            tension: 0.38\n          }\n        },\n        scales: {\n          xAxes: [{\n            gridLines: false,\n            ticks: {\n              callback: function callback(tick, index) {\n                return index % 2 === 0 ? \"\" : tick;\n              }\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              suggestedMax: 45\n            }\n          }]\n        },\n        tooltips: {\n          enabled: false,\n          mode: \"index\",\n          position: \"nearest\"\n        }\n      }, this.props.chartOptions);\n\n      var AnalyticsOverviewChart = new Chart(this.canvasRef.current, {\n        type: \"line\",\n        data: this.props.chartData,\n        options: chartOptions\n      }); // Generate the analytics overview chart labels.\n\n      this.legendRef.current.innerHTML = AnalyticsOverviewChart.generateLegend(); // Hide initially the first and last analytics overview chart points.\n      // They can still be triggered on hover.\n\n      var meta = AnalyticsOverviewChart.getDatasetMeta(0);\n      meta.data[0]._model.radius = 0;\n      meta.data[this.props.chartData.datasets[0].data.length - 1]._model.radius = 0; // Render the chart.\n\n      AnalyticsOverviewChart.render();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var title = this.props.title;\n      return React.createElement(Card, {\n        small: true,\n        className: \"h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, title), React.createElement(\"div\", {\n        className: \"block-handle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        className: \"pt-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"user-details__user-data border-top border-bottom p-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"w-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"DELETED_EMAIL\")), React.createElement(Col, {\n        className: \"w-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Location\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"remote\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"w-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Phone\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"1234\")), React.createElement(Col, {\n        className: \"w-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Account Number\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"4321\"))))));\n    }\n  }]);\n\n  return Sessions;\n}(React.Component);\n\nSessions.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The Chart.js data.\n   */\n  chartData: PropTypes.object,\n\n  /**\n   * The Chart.js config options.\n   */\n  chartOptions: PropTypes.object\n};\nSessions.defaultProps = {\n  title: \"Sessions\",\n  chartData: {\n    labels: [\"09:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\", \"13:00 PM\", \"14:00 PM\", \"15:00 PM\", \"16:00 PM\", \"17:00 PM\"],\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      data: [5, 5, 10, 30, 10, 42, 5, 15, 5],\n      backgroundColor: colors.primary.toRGBA(0.1),\n      borderColor: colors.primary.toRGBA(1),\n      pointBackgroundColor: colors.white.toHex(),\n      pointHoverBackgroundColor: colors.primary.toRGBA(1),\n      borderWidth: 1.5\n    }, {\n      label: \"Yesterday\",\n      fill: \"start\",\n      data: [\"\", 23, 5, 10, 5, 5, 30, 2, 10],\n      backgroundColor: colors.salmon.toRGBA(0.1),\n      borderColor: colors.salmon.toRGBA(1),\n      pointBackgroundColor: colors.white.toHex(),\n      pointHoverBackgroundColor: colors.salmon.toRGBA(1),\n      borderDash: [5, 5],\n      borderWidth: 1.5,\n      pointRadius: 0,\n      pointBorderColor: colors.salmon.toRGBA(1)\n    }]\n  }\n};\nexport default Sessions;","map":{"version":3,"sources":["/Users/colin/Desktop/insemble/web-app/src/components/explore/Sessions.js"],"names":["React","PropTypes","Card","CardHeader","CardBody","Row","Col","ButtonGroup","Button","RangeDatePicker","colors","Chart","Sessions","props","canvasRef","createRef","chartOptions","responsive","legend","elements","line","tension","scales","xAxes","gridLines","ticks","callback","tick","index","yAxes","suggestedMax","tooltips","enabled","mode","position","AnalyticsOverviewChart","current","type","data","chartData","options","legendRef","innerHTML","generateLegend","meta","getDatasetMeta","_model","radius","datasets","length","render","title","Component","propTypes","string","object","defaultProps","labels","label","fill","backgroundColor","primary","toRGBA","borderColor","pointBackgroundColor","white","toHex","pointHoverBackgroundColor","borderWidth","salmon","borderDash","pointRadius","pointBorderColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button\n} from \"shards-react\";\n\nimport RangeDatePicker from \"../common/RangeDatePicker\";\n\nimport colors from \"../../utils/colors\";\nimport Chart from \"../../utils/chart\";\n\nclass Sessions extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartOptions = {\n      ...{\n        responsive: true,\n        legend: false,\n        elements: {\n          line: {\n            // A higher value makes the line look skewed at this ratio.\n            tension: 0.38\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                callback(tick, index) {\n                  return index % 2 === 0 ? \"\" : tick;\n                }\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                suggestedMax: 45\n              }\n            }\n          ]\n        },\n        tooltips: {\n          enabled: false,\n          mode: \"index\",\n          position: \"nearest\"\n        }\n      },\n      ...this.props.chartOptions\n    };\n\n    const AnalyticsOverviewChart = new Chart(this.canvasRef.current, {\n      type: \"line\",\n      data: this.props.chartData,\n      options: chartOptions\n    });\n\n    // Generate the analytics overview chart labels.\n    this.legendRef.current.innerHTML = AnalyticsOverviewChart.generateLegend();\n\n    // Hide initially the first and last analytics overview chart points.\n    // They can still be triggered on hover.\n    const meta = AnalyticsOverviewChart.getDatasetMeta(0);\n    meta.data[0]._model.radius = 0;\n    meta.data[\n      this.props.chartData.datasets[0].data.length - 1\n    ]._model.radius = 0;\n\n    // Render the chart.\n    AnalyticsOverviewChart.render();\n  }\n\n  render() {\n    const { title } = this.props;\n\n    return (\n      <Card small className=\"h-100\">\n        {/* Card Header */}\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n          <div className=\"block-handle\" />\n        </CardHeader>\n\n        <CardBody className=\"pt-0\">\n          <div className=\"user-details__user-data border-top border-bottom p-4\">\n            <Row className=\"mb-3\">\n              <Col className=\"w-50\">\n                <span>Email</span>\n                <span>{\"DELETED_EMAIL\"}</span>\n              </Col>\n              <Col className=\"w-50\">\n                <span>Location</span>\n                <span>{\"remote\"}</span>\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"w-50\">\n                <span>Phone</span>\n                <span>{\"1234\"}</span>\n              </Col>\n              <Col className=\"w-50\">\n                <span>Account Number</span>\n                <span>{\"4321\"}</span>\n              </Col>\n            </Row>\n          </div>\n          \n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nSessions.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The Chart.js data.\n   */\n  chartData: PropTypes.object,\n  /**\n   * The Chart.js config options.\n   */\n  chartOptions: PropTypes.object\n};\n\nSessions.defaultProps = {\n  title: \"Sessions\",\n  chartData: {\n    labels: [\n      \"09:00 PM\",\n      \"10:00 PM\",\n      \"11:00 PM\",\n      \"12:00 PM\",\n      \"13:00 PM\",\n      \"14:00 PM\",\n      \"15:00 PM\",\n      \"16:00 PM\",\n      \"17:00 PM\"\n    ],\n    datasets: [\n      {\n        label: \"Today\",\n        fill: \"start\",\n        data: [5, 5, 10, 30, 10, 42, 5, 15, 5],\n        backgroundColor: colors.primary.toRGBA(0.1),\n        borderColor: colors.primary.toRGBA(1),\n        pointBackgroundColor: colors.white.toHex(),\n        pointHoverBackgroundColor: colors.primary.toRGBA(1),\n        borderWidth: 1.5\n      },\n      {\n        label: \"Yesterday\",\n        fill: \"start\",\n        data: [\"\", 23, 5, 10, 5, 5, 30, 2, 10],\n        backgroundColor: colors.salmon.toRGBA(0.1),\n        borderColor: colors.salmon.toRGBA(1),\n        pointBackgroundColor: colors.white.toHex(),\n        pointHoverBackgroundColor: colors.salmon.toRGBA(1),\n        borderDash: [5, 5],\n        borderWidth: 1.5,\n        pointRadius: 0,\n        pointBorderColor: colors.salmon.toRGBA(1)\n      }\n    ]\n  }\n};\n\nexport default Sessions;\n"]},"metadata":{},"sourceType":"module"}