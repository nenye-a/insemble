{"ast":null,"code":"import _classCallCheck from \"@DELETED_BASE64_STRING\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@DELETED_BASE64_STRING\";\nimport _getPrototypeOf from \"@DELETED_BASE64_STRING\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/colin/Desktop/insemble/web-app/src/components/tenant-deep-dive/About.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, CardHeader, CardBody, CardFooter, Row, Col, FormSelect } from \"shards-react\";\nimport colors from \"../../utils/colors\";\nimport Chart from \"../../utils/chart\";\n\nvar About =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(About, _React$Component);\n\n  function About(props) {\n    _classCallCheck(this, About);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(About).call(this, props));\n  }\n\n  _createClass(About, [{\n    key: \"render\",\n    value: function render() {\n      var title = this.props.title;\n      return React.createElement(Card, {\n        small: true,\n        className: \"h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, title), React.createElement(\"div\", {\n        className: \"block-handle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        className: \"pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Operates 6 locations in San Francisco, California\")), React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Tags: Coffee, Local, Restaurant, Top performer\"))));\n    }\n  }, {\n    key: \"getParsedLabels\",\n    value: function getParsedLabels() {\n      var chartData = this.props.chartData;\n\n      if (!chartData || typeof chartData.labels === \"undefined\") {\n        return [];\n      }\n\n      return chartData.labels.map(function (label, idx) {\n        var dataset = chartData.datasets[0];\n        return {\n          title: label,\n          value: dataset.data[idx]\n        };\n      });\n    }\n  }]);\n\n  return About;\n}(React.Component);\n\nAbout.propTypes = {\n  /**\n   * The card's title.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object,\n\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.object,\n\n  /**\n   * The Chart.js config.\n   */\n  chartConfig: PropTypes.object\n};\nAbout.defaultProps = {\n  title: \"About\",\n  chartConfig: Object.create(null),\n  chartOptions: Object.create(null),\n  chartData: {\n    labels: [\"Asian\", \"Black\", \"Hispanic\", \"Indian\", \"Multi\", \"White\"],\n    datasets: [{\n      hoverBorderColor: colors.white.toRGBA(1),\n      data: [3, 6, 15, 5, 14, 57],\n      backgroundColor: [colors.primary.toRGBA(1), colors.primary.toRGBA(0.8), colors.primary.toRGBA(0.6), colors.primary.toRGBA(0.4), colors.primary.toRGBA(0.2), colors.primary.toRGBA(0.1)]\n    }]\n  }\n};\nexport default About;","map":{"version":3,"sources":["/Users/colin/Desktop/insemble/web-app/src/components/tenant-deep-dive/About.js"],"names":["React","PropTypes","Card","CardHeader","CardBody","CardFooter","Row","Col","FormSelect","colors","Chart","About","props","title","chartData","labels","map","label","idx","dataset","datasets","value","data","Component","propTypes","string","chartOptions","object","chartConfig","defaultProps","Object","create","hoverBorderColor","white","toRGBA","backgroundColor","primary"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Row,\n  Col,\n  FormSelect\n} from \"shards-react\";\n\nimport colors from \"../../utils/colors\";\nimport Chart from \"../../utils/chart\";\n\nclass About extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    const { title } = this.props;\n\n    return (\n      <Card small className=\"h-100\">\n        {/* Card Header */}\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n          <div className=\"block-handle\" />\n        </CardHeader>\n\n        <CardBody className=\"pt-3\">\n          <Col sm=\"6\">\n            <div>Operates 6 locations in San Francisco, California</div>\n          </Col>\n          \n          <Col sm=\"6\">\n            <div>Tags: Coffee, Local, Restaurant, Top performer</div>\n          </Col>\n        </CardBody>\n      </Card>\n    );\n  }\n\n  getParsedLabels() {\n    const { chartData } = this.props;\n\n    if (!chartData || typeof chartData.labels === \"undefined\") {\n      return [];\n    }\n\n    return chartData.labels.map((label, idx) => {\n      const dataset = chartData.datasets[0];\n\n      return {\n        title: label,\n        value: dataset.data[idx]\n      };\n    });\n  }\n}\n\nAbout.propTypes = {\n  /**\n   * The card's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.object,\n  /**\n   * The Chart.js config.\n   */\n  chartConfig: PropTypes.object\n};\n\nAbout.defaultProps = {\n  title: \"About\",\n  chartConfig: Object.create(null),\n  chartOptions: Object.create(null),\n  chartData: {\n    labels: [\"Asian\", \"Black\", \"Hispanic\", \"Indian\", \"Multi\", \"White\"],\n    datasets: [\n      {\n        hoverBorderColor: colors.white.toRGBA(1),\n        data: [3, 6, 15, 5, 14, 57],\n        backgroundColor: [\n          colors.primary.toRGBA(1),\n          colors.primary.toRGBA(0.8),\n          colors.primary.toRGBA(0.6),\n          colors.primary.toRGBA(0.4),\n          colors.primary.toRGBA(0.2),\n          colors.primary.toRGBA(0.1)\n        ]\n      }\n    ]\n  }\n};\n\nexport default About;\n"]},"metadata":{},"sourceType":"module"}