{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/colin/Desktop/insemble/web-app/src/components/tenant-deep-dive/About.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, CardHeader, CardBody, CardFooter, Row, Col, FormSelect } from \"shards-react\";\nimport colors from \"../../utils/colors\";\nimport Chart from \"../../utils/chart\";\n\nvar About =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(About, _React$Component);\n\n  function About(props) {\n    var _this;\n\n    _classCallCheck(this, About);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(About).call(this, props));\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(About, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var chartConfig = {\n        type: \"doughnut\",\n        options: _objectSpread({}, {\n          legend: false,\n          cutoutPercentage: 80,\n          tooltips: {\n            enabled: false,\n            mode: \"index\",\n            position: \"nearest\"\n          }\n        }, this.props.chartOptions),\n        data: this.props.chartData\n      };\n      new Chart(this.canvasRef.current, chartConfig);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var title = this.props.title;\n      return React.createElement(Card, {\n        small: true,\n        className: \"h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, title), React.createElement(\"div\", {\n        className: \"block-handle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        className: \"pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Operates 6 locations in San Francisco, California\")), React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Customer Relevance\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Customers visit your location when grabbing a coffee\"))));\n    }\n  }, {\n    key: \"getParsedLabels\",\n    value: function getParsedLabels() {\n      var chartData = this.props.chartData;\n\n      if (!chartData || typeof chartData.labels === \"undefined\") {\n        return [];\n      }\n\n      return chartData.labels.map(function (label, idx) {\n        var dataset = chartData.datasets[0];\n        return {\n          title: label,\n          value: dataset.data[idx]\n        };\n      });\n    }\n  }]);\n\n  return About;\n}(React.Component);\n\nAbout.propTypes = {\n  /**\n   * The card's title.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object,\n\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.object,\n\n  /**\n   * The Chart.js config.\n   */\n  chartConfig: PropTypes.object\n};\nAbout.defaultProps = {\n  title: \"About\",\n  chartConfig: Object.create(null),\n  chartOptions: Object.create(null),\n  chartData: {\n    labels: [\"Asian\", \"Black\", \"Hispanic\", \"Indian\", \"Multi\", \"White\"],\n    datasets: [{\n      hoverBorderColor: colors.white.toRGBA(1),\n      data: [3, 6, 15, 5, 14, 57],\n      backgroundColor: [colors.primary.toRGBA(1), colors.primary.toRGBA(0.8), colors.primary.toRGBA(0.6), colors.primary.toRGBA(0.4), colors.primary.toRGBA(0.2), colors.primary.toRGBA(0.1)]\n    }]\n  }\n};\nexport default About;","map":{"version":3,"sources":["/Users/colin/Desktop/insemble/web-app/src/components/tenant-deep-dive/About.js"],"names":["React","PropTypes","Card","CardHeader","CardBody","CardFooter","Row","Col","FormSelect","colors","Chart","About","props","canvasRef","createRef","chartConfig","type","options","legend","cutoutPercentage","tooltips","enabled","mode","position","chartOptions","data","chartData","current","title","labels","map","label","idx","dataset","datasets","value","Component","propTypes","string","object","defaultProps","Object","create","hoverBorderColor","white","toRGBA","backgroundColor","primary"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Row,\n  Col,\n  FormSelect\n} from \"shards-react\";\n\nimport colors from \"../../utils/colors\";\nimport Chart from \"../../utils/chart\";\n\nclass About extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartConfig = {\n      type: \"doughnut\",\n      options: {\n        ...{\n          legend: false,\n          cutoutPercentage: 80,\n          tooltips: {\n            enabled: false,\n            mode: \"index\",\n            position: \"nearest\"\n          }\n        },\n        ...this.props.chartOptions\n      },\n      data: this.props.chartData\n    };\n\n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const { title } = this.props;\n\n    return (\n      <Card small className=\"h-100\">\n        {/* Card Header */}\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n          <div className=\"block-handle\" />\n        </CardHeader>\n\n        <CardBody className=\"pt-3\">\n          <Col sm=\"6\">\n            <div>Operates 6 locations in San Francisco, California</div>\n          </Col>\n          \n          <Col sm=\"6\">\n            <h6>Customer Relevance</h6>\n            <div>Customers visit your location when grabbing a coffee</div>\n          </Col>\n        </CardBody>\n      </Card>\n    );\n  }\n\n  getParsedLabels() {\n    const { chartData } = this.props;\n\n    if (!chartData || typeof chartData.labels === \"undefined\") {\n      return [];\n    }\n\n    return chartData.labels.map((label, idx) => {\n      const dataset = chartData.datasets[0];\n\n      return {\n        title: label,\n        value: dataset.data[idx]\n      };\n    });\n  }\n}\n\nAbout.propTypes = {\n  /**\n   * The card's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.object,\n  /**\n   * The Chart.js config.\n   */\n  chartConfig: PropTypes.object\n};\n\nAbout.defaultProps = {\n  title: \"About\",\n  chartConfig: Object.create(null),\n  chartOptions: Object.create(null),\n  chartData: {\n    labels: [\"Asian\", \"Black\", \"Hispanic\", \"Indian\", \"Multi\", \"White\"],\n    datasets: [\n      {\n        hoverBorderColor: colors.white.toRGBA(1),\n        data: [3, 6, 15, 5, 14, 57],\n        backgroundColor: [\n          colors.primary.toRGBA(1),\n          colors.primary.toRGBA(0.8),\n          colors.primary.toRGBA(0.6),\n          colors.primary.toRGBA(0.4),\n          colors.primary.toRGBA(0.2),\n          colors.primary.toRGBA(0.1)\n        ]\n      }\n    ]\n  }\n};\n\nexport default About;\n"]},"metadata":{},"sourceType":"module"}