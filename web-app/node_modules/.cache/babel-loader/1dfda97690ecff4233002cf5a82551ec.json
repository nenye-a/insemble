{"ast":null,"code":"import _classCallCheck from \"@DELETED_BASE64_STRING\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@DELETED_BASE64_STRING\";\nimport _getPrototypeOf from \"@DELETED_BASE64_STRING\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/colin/Desktop/insemble/web-app/src/components/tenant-deep-dive/AtAGlance.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, CardHeader, CardBody, Row, Col, ButtonGroup, Button, Badge } from \"shards-react\";\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport colors from \"../../utils/colors\";\nimport Chart from \"../../utils/chart\";\n\nvar AtAGlance =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AtAGlance, _React$Component);\n\n  function AtAGlance(props) {\n    _classCallCheck(this, AtAGlance);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AtAGlance).call(this, props));\n  }\n\n  _createClass(AtAGlance, [{\n    key: \"render\",\n    value: function render() {\n      var title = this.props.title;\n      var userData = this.props.userData;\n      return React.createElement(Card, {\n        small: true,\n        className: \"h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, title), React.createElement(\"div\", {\n        className: \"block-handle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        className: \"pt-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Average Price\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Average Price\")));\n    }\n  }]);\n\n  return AtAGlance;\n}(React.Component);\n\nAtAGlance.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The Chart.js data.\n   */\n  chartData: PropTypes.object,\n\n  /**\n   * The Chart.js config options.\n   */\n  chartOptions: PropTypes.object\n};\nAtAGlance.defaultProps = {\n  title: \"At A Glance\",\n  chartData: {\n    labels: [\"09:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\", \"13:00 PM\", \"14:00 PM\", \"15:00 PM\", \"16:00 PM\", \"17:00 PM\"],\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      data: [5, 5, 10, 30, 10, 42, 5, 15, 5],\n      backgroundColor: colors.primary.toRGBA(0.1),\n      borderColor: colors.primary.toRGBA(1),\n      pointBackgroundColor: colors.white.toHex(),\n      pointHoverBackgroundColor: colors.primary.toRGBA(1),\n      borderWidth: 1.5\n    }, {\n      label: \"Yesterday\",\n      fill: \"start\",\n      data: [\"\", 23, 5, 10, 5, 5, 30, 2, 10],\n      backgroundColor: colors.salmon.toRGBA(0.1),\n      borderColor: colors.salmon.toRGBA(1),\n      pointBackgroundColor: colors.white.toHex(),\n      pointHoverBackgroundColor: colors.salmon.toRGBA(1),\n      borderDash: [5, 5],\n      borderWidth: 1.5,\n      pointRadius: 0,\n      pointBorderColor: colors.salmon.toRGBA(1)\n    }]\n  },\n  userData: {\n    coverImg: require(\"../../images/user-profile/up-user-details-background.jpg\"),\n    avatarImg: require(\"../../images/avatars/0.jpg\"),\n    name: \"Sierra Brooks\",\n    bio: \"I'm a design focused engineer.\",\n    email: \"DELETED_EMAIL\",\n    location: \"Remote\",\n    phone: \"+40 1234 567 890\",\n    accNumber: \"123456789\",\n    social: {\n      facebook: \"#\",\n      twitter: \"#\",\n      github: \"#\",\n      slack: \"#\"\n    },\n    tags: [\"Cocktail Bars\", \"Coffee Shops\", \"Ice Cream\", \"Bookstores\"]\n  }\n};\nexport default AtAGlance;","map":{"version":3,"sources":["/Users/colin/Desktop/insemble/web-app/src/components/tenant-deep-dive/AtAGlance.js"],"names":["React","PropTypes","Card","CardHeader","CardBody","Row","Col","ButtonGroup","Button","Badge","RangeDatePicker","colors","Chart","AtAGlance","props","title","userData","Component","propTypes","string","chartData","object","chartOptions","defaultProps","labels","datasets","label","fill","data","backgroundColor","primary","toRGBA","borderColor","pointBackgroundColor","white","toHex","pointHoverBackgroundColor","borderWidth","salmon","borderDash","pointRadius","pointBorderColor","coverImg","require","avatarImg","name","bio","email","location","phone","accNumber","social","facebook","twitter","github","slack","tags"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button, \n  Badge\n} from \"shards-react\";\n\nimport RangeDatePicker from \"../common/RangeDatePicker\";\n\nimport colors from \"../../utils/colors\";\nimport Chart from \"../../utils/chart\";\n\nclass AtAGlance extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { title } = this.props;\n    const { userData} = this.props;\n\n    return (\n      <Card small className=\"h-100\">\n        {/* Card Header */}\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n          <div className=\"block-handle\" />\n        </CardHeader>\n\n        <CardBody className=\"pt-0\">\n          <Col>Average Price\n          </Col>\n          <Col>\n            Average Price\n          </Col>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nAtAGlance.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The Chart.js data.\n   */\n  chartData: PropTypes.object,\n  /**\n   * The Chart.js config options.\n   */\n  chartOptions: PropTypes.object\n};\n\nAtAGlance.defaultProps = {\n  title: \"At A Glance\",\n  chartData: {\n    labels: [\n      \"09:00 PM\",\n      \"10:00 PM\",\n      \"11:00 PM\",\n      \"12:00 PM\",\n      \"13:00 PM\",\n      \"14:00 PM\",\n      \"15:00 PM\",\n      \"16:00 PM\",\n      \"17:00 PM\"\n    ],\n    datasets: [\n      {\n        label: \"Today\",\n        fill: \"start\",\n        data: [5, 5, 10, 30, 10, 42, 5, 15, 5],\n        backgroundColor: colors.primary.toRGBA(0.1),\n        borderColor: colors.primary.toRGBA(1),\n        pointBackgroundColor: colors.white.toHex(),\n        pointHoverBackgroundColor: colors.primary.toRGBA(1),\n        borderWidth: 1.5\n      },\n      {\n        label: \"Yesterday\",\n        fill: \"start\",\n        data: [\"\", 23, 5, 10, 5, 5, 30, 2, 10],\n        backgroundColor: colors.salmon.toRGBA(0.1),\n        borderColor: colors.salmon.toRGBA(1),\n        pointBackgroundColor: colors.white.toHex(),\n        pointHoverBackgroundColor: colors.salmon.toRGBA(1),\n        borderDash: [5, 5],\n        borderWidth: 1.5,\n        pointRadius: 0,\n        pointBorderColor: colors.salmon.toRGBA(1)\n      }\n    ]\n  },\n  userData: {\n    coverImg: require(\"../../images/user-profile/up-user-details-background.jpg\"),\n    avatarImg: require(\"../../images/avatars/0.jpg\"),\n    name: \"Sierra Brooks\",\n    bio: \"I'm a design focused engineer.\",\n    email: \"DELETED_EMAIL\",\n    location: \"Remote\",\n    phone: \"+40 1234 567 890\",\n    accNumber: \"123456789\",\n    social: {\n      facebook: \"#\",\n      twitter: \"#\",\n      github: \"#\",\n      slack: \"#\"\n    },\n    tags: [\n      \"Cocktail Bars\",\n      \"Coffee Shops\",\n      \"Ice Cream\",\n      \"Bookstores\"\n    ]\n  }\n};\n\nexport default AtAGlance;\n"]},"metadata":{},"sourceType":"module"}