#!/usr/bin/perl
############################################################
# this perl script is meant for developers only!
# it will run all spec-tests (without verifying the
# results) via valgrind to detect possible leaks.
# expect that it takes 1h or more to finish!
############################################################
# Prerequisite install: `cpan Parallel::Runner`
# You may also need to install `cpan File::Find`
# You may also need to install `cpan IPC::Run3`
############################################################
# usage: `perl test-leaks.pl [threads]`
# example: `time perl test-leaks.pl 4`
############################################################
# leaks will be reported in "mem-leaks.log"
############################################################

use strict;
use warnings;

############################################################
# configurations (you may adjust)
############################################################

# number of threads to use
my $threads = $ARGV[0] || 8;

# the github repositories to checkout
# if you need other branch, clone manually!
my $sassc = "DELETED_URL_WITH_CREDENTIALS"."; # print success indicator
    } else {
      print "F"; # print error indicator
      flock($leaks, LOCK_EX) or die "Cannot lock log";
      $leaks->printflush("#" x 80, "\n", $err, "\n");
      flock($leaks, LOCK_UN) or die "Cannot unlock log";
    }
  });
}

$runner->finish;
