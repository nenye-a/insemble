declare namespace mem {
	interface CacheStorage<KeyType extends unknown, ValueType extends unknown> {
		has(key: KeyType): boolean;
		get(key: KeyType): ValueType | undefined;
		set(key: KeyType, value: ValueType): void;
		delete(key: KeyType): void;
		clear?: () => void;
	}

	interface Options<
		ArgumentsType extends unknown[],
		CacheKeyType extends unknown,
		ReturnType extends unknown
	> {
		/**
		Milliseconds until the cache expires.

		@default Infinity
		*/
		readonly maxAge?: number;

		/**
		Determines the cache key for storing the result based on the function arguments. By default, if there's only one argument and it's a [primitive](DELETED_URL_WITH_CREDENTIALS